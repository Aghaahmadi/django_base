version: '3.9'

services:
  db:
    container_name: db
    image: postgres
    environment:
      - POSTGRES_DB=django
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=psg235a
    networks:
      - main
    volumes:
      - db_data:/var/lib/postgresql/data
    restart: always

  app:
    build: .
    container_name: app
    command: sh -c "python manage.py migrate && gunicorn A.wsgi -b 0.0.0.0:8000"
    environment:
      - DB_HOST=db
      - DB_NAME=django
      - DB_USER=postgres
      - pDB_PASSWORD=psg235a
    volumes:
      - .:/code/
      - ./static:/static
    ports:
      - 8000:8000
    networks:
      - main
    restart: always
    depends_on:
      - db

  nginx:
    container_name: nginx
    command: nginx -g 'daemon off;'
    image: nginx:latest
    ports:
      - 80:80
    networks:
      - main
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./static:/static
    restart: always
    depends_on:
      - app

#  rabbitmq:
#    container_name: rabbitmq
#    restart: always
#    image: rabbitmq
#    networks:
#      - main
#    volumes:
#      - rabbitmq_data:/var/lib/rabbitmq

  redis:
    container_name: redis
    image: redis
    restart: always
    networks:
      - main
    volumes:
      - redis_data:/data

  celery_worker:
    container_name: celery_worker
    build: .
    networks:
      - main
    volumes:
      - .:/code/
    command: celery -A A worker -l info
    depends_on:
#      - rabbitmq
      - redis

  celery_scheduler:
    container_name: celery_scheduler
    build: .
    networks:
      - main
    volumes:
      - .:/code/
    command: celery -A A beat -l info
    depends_on:
      - celery_worker


networks:
  main:

volumes:
  db_data:
  rabbitmq_data:
  redis_data:
